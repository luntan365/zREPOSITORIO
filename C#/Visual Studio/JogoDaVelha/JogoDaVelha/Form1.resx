<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="panel_bot.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel_bot.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /9k=
</value>
  </data>
</root>